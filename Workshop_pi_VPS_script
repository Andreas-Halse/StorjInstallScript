#!/bin/bash
set -e  # Exit on any error

if [ -z "$1" ]; then
  echo "Usage: $0 <UniqueID>"
  echo "Example: curl -sL https://yourserver.com/vps_setup.sh | bash -s -- 1"
  exit 1
fi

UNIQUE_ID=$1  # Get the unique ID from the command-line argument

export DEBIAN_FRONTEND=noninteractive

# Update and install WireGuard
apt update -y && apt upgrade -y
apt install -y wireguard iptables-persistent net-tools curl

# Enable IP forwarding
sysctl -w net.ipv4.ip_forward=1
echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf

# Generate WireGuard keys
mkdir -p /etc/wireguard
wg genkey | tee /etc/wireguard/private.key | wg pubkey > /etc/wireguard/public.key

PRIVATE_KEY=$(cat /etc/wireguard/private.key)
PUBLIC_KEY=$(cat /etc/wireguard/public.key)

# Get the VPS public IP
VPS_PUBLIC_IP=$(curl -s https://api.ipify.org)

# Ask for Raspberry Pi public key and IP
read -p "Enter Raspberry Pi Public Key: " PI_PUBLIC_KEY
read -p "Enter Raspberry Pi WireGuard IP (e.g., 10.200.200.100): " PI_WG_IP

# Configure WireGuard
cat <<EOF > /etc/wireguard/wg0.conf
[Interface]
PrivateKey = $PRIVATE_KEY
Address = 10.200.200.$UNIQUE_ID/24
ListenPort = 51820

# PostUp and PostDown NAT and forwarding rules
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

[Peer]
PublicKey = $PI_PUBLIC_KEY
AllowedIPs = $PI_WG_IP/32
EOF

# Enable and start WireGuard
systemctl enable wg-quick@wg0
systemctl start wg-quick@wg0

# Output necessary info
echo "VPS Public Key: $PUBLIC_KEY"
echo "VPS Public IP: $VPS_PUBLIC_IP"
echo "VPS WireGuard IP: 10.200.200.$UNIQUE_ID"
echo "Share the VPS public key with the Raspberry Pi."
